/*
 * Book Blog API
 * This is a blog about books.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Book', 'model/Books', 'model/Bookshelf', 'model/BookshelfBookshelf', 'model/BookshelfInfo', 'model/Bookshelfs', 'model/BookshelfsBookshelfs', 'model/Review', 'model/Reviews', 'model/Token', 'model/User', 'api/BookApi', 'api/ReviewApi', 'api/TokenApi', 'api/UserApi', 'api/UserBookshelfApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Book'), require('./model/Books'), require('./model/Bookshelf'), require('./model/BookshelfBookshelf'), require('./model/BookshelfInfo'), require('./model/Bookshelfs'), require('./model/BookshelfsBookshelfs'), require('./model/Review'), require('./model/Reviews'), require('./model/Token'), require('./model/User'), require('./api/BookApi'), require('./api/ReviewApi'), require('./api/TokenApi'), require('./api/UserApi'), require('./api/UserBookshelfApi'));
  }
}(function(ApiClient, Book, Books, Bookshelf, BookshelfBookshelf, BookshelfInfo, Bookshelfs, BookshelfsBookshelfs, Review, Reviews, Token, User, BookApi, ReviewApi, TokenApi, UserApi, UserBookshelfApi) {
  'use strict';

  /**
   * This_is_a_blog_about_books_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var BookBlogApi = require('index'); // See note below*.
   * var xxxSvc = new BookBlogApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new BookBlogApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new BookBlogApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new BookBlogApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Book model constructor.
     * @property {module:model/Book}
     */
    Book: Book,
    /**
     * The Books model constructor.
     * @property {module:model/Books}
     */
    Books: Books,
    /**
     * The Bookshelf model constructor.
     * @property {module:model/Bookshelf}
     */
    Bookshelf: Bookshelf,
    /**
     * The BookshelfBookshelf model constructor.
     * @property {module:model/BookshelfBookshelf}
     */
    BookshelfBookshelf: BookshelfBookshelf,
    /**
     * The BookshelfInfo model constructor.
     * @property {module:model/BookshelfInfo}
     */
    BookshelfInfo: BookshelfInfo,
    /**
     * The Bookshelfs model constructor.
     * @property {module:model/Bookshelfs}
     */
    Bookshelfs: Bookshelfs,
    /**
     * The BookshelfsBookshelfs model constructor.
     * @property {module:model/BookshelfsBookshelfs}
     */
    BookshelfsBookshelfs: BookshelfsBookshelfs,
    /**
     * The Review model constructor.
     * @property {module:model/Review}
     */
    Review: Review,
    /**
     * The Reviews model constructor.
     * @property {module:model/Reviews}
     */
    Reviews: Reviews,
    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token: Token,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The BookApi service constructor.
     * @property {module:api/BookApi}
     */
    BookApi: BookApi,
    /**
     * The ReviewApi service constructor.
     * @property {module:api/ReviewApi}
     */
    ReviewApi: ReviewApi,
    /**
     * The TokenApi service constructor.
     * @property {module:api/TokenApi}
     */
    TokenApi: TokenApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi,
    /**
     * The UserBookshelfApi service constructor.
     * @property {module:api/UserBookshelfApi}
     */
    UserBookshelfApi: UserBookshelfApi
  };

  return exports;
}));
